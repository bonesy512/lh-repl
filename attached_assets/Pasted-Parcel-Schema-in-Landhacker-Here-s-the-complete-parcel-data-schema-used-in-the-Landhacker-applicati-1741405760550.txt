Parcel Schema in Landhacker
Here's the complete parcel data schema used in the Landhacker application:

Parcel Data Schema
Copy snippet
{
  "PropertyDetailsResponse": {
    "type": "object",
    "properties": {
      "// Metadata": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the property"
        },
        "isSaved": {
          "type": "boolean",
          "description": "Whether the property is saved by the user"
        }
      },
      "// Parcel Data": {
        "propertyId": {
          "type": "string",
          "description": "Property ID from county records"
        },
        "ownerName": {
          "type": "string",
          "description": "Property owner name"
        },
        "legalArea": {
          "type": "string",
          "description": "Legal area with units"
        },
        "legalAreaUnits": {
          "type": "string",
          "description": "Legal area units"
        },
        "gisArea": {
          "type": "number",
          "description": "GIS calculated area"
        },
        "gisAreaUnits": {
          "type": "string",
          "description": "GIS area units"
        },
        "landValue": {
          "type": "integer",
          "description": "Assessed land value"
        },
        "improvementValue": {
          "type": "integer",
          "description": "Assessed improvement value"
        },
        "marketValue": {
          "type": "integer",
          "description": "Total market value"
        },
        "dateAcquired": {
          "type": "integer",
          "description": "Date property was acquired"
        },
        "fipsCode": {
          "type": "string",
          "description": "FIPS code"
        },
        "county": {
          "type": "string",
          "description": "County name"
        },
        "taxYear": {
          "type": "integer",
          "description": "Tax assessment year"
        }
      },
      "// Address": {
        "address": {
          "type": "object",
          "properties": {
            "city": {
              "type": "string"
            },
            "state": {
              "type": "string"
            },
            "streetAddress": {
              "type": "string"
            },
            "zipcode": {
              "type": "string"
            }
          }
        },
        "zpid": {
          "type": "integer"
        },
        "latitude": {
          "type": "number"
        },
        "longitude": {
          "type": "number"
        }
      },
      "// Distance to City": {
        "timeToCity": {
          "type": "string"
        },
        "distanceToCity": {
          "type": "string"
        }
      },
      "// Analysis and Comparisons": {
        "priceComparisons": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string"
              },
              "price": {
                "type": "string"
              },
              "website_name": {
                "type": "string"
              }
            }
          },
          "description": "Price estimates from different websites"
        },
        "predicted_price": {
          "type": "string",
          "description": "AI predicted price for the property"
        },
        "confidence_score": {
          "type": "string",
          "description": "Confidence score for the predicted price (0-1)"
        },
        "price_reasoning": {
          "type": "string",
          "description": "Reasoning behind the predicted price"
        }
      },
      "// Acre Prices": {
        "acre_prices": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "acre": {
                "type": "number"
              },
              "price": {
                "type": "number"
              },
              "address": {
                "type": "string"
              }
            }
          },
          "description": "Comparable land prices by acre in the area"
        }
      }
    }
  }
}
Data Storage Structure
The parcel data is stored in Firestore with the following characteristics:

Collection: The parcels are stored in a "queries" collection in Firestore
Document IDs: Either generated by Firestore or matched to the queried zpid
User Association: Each parcel document includes a "userId" field linking it to a specific user
When a user saves a property, the data is stored using the savePropertyQuery function, which:

Sanitizes the property data (replaces undefined values with null)
Checks if the property already exists for the user
Updates the existing document or creates a new one
The parcel data combines information from multiple sources:

Basic property details from map features
County records for parcel ID, owner, and tax information
GIS calculations for area measurements
Price estimates from web scraping
AI-generated price predictions
This schema allows the app to store comprehensive property information while maintaining flexibility for properties with missing or incomplete data.